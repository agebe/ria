#!/usr/bin/env ria

dependencies {
  'com.google.code.gson:gson:2.10'
}

var json = '''
[
	{
		color: "red",
		value: "#f00"
	},
	{
		color: "green",
		value: "#0f0"
	},
	{
		color: "blue",
		value: "#00f"
	},
	{
		color: "cyan",
		value: "#0ff"
	},
	{
		color: "magenta",
		value: "#f0f"
	},
	{
		color: "yellow",
		value: "#ff0"
	},
	{
		color: "black",
		value: "#000"
	}
]''';
var list = new Gson().fromJson(json, List.class);
println(list.get(0).get("value"));

// parse again this time showing how to create specific java types

javasrc $imports + '''
public class Item {

  public static enum Color {
    @SerializedName("red")
    RED,
    @SerializedName("green")
    GREEN,
    @SerializedName("blue")
    BLUE,
    @SerializedName("cyan")
    CYAN,
    @SerializedName("magenta")
    MAGENTA,
    @SerializedName("yellow")
    YELLOW,
    @SerializedName("black")
    BLACK,
    ;
  }

  public Color color;

  @SerializedName("value")
  public String code;

  @Override
  public String toString() {
    return color + "/" + code;
  }
}
''';

javasrc $imports + '''
public class GsonTypes {
  public static java.lang.reflect.Type listOfItems() {
    return new com.google.gson.reflect.TypeToken<List<Item>>(){}.getType();
  }
}
''';

var listOfItems = new Gson().fromJson(json, GsonTypes.listOfItems());
listOfItems.forEach(println);
